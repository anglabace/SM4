<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="com.spring.aop"/>
    <!--方法注入不同于set注入和构造注入. -->
    <!--lookup-method中name是BeanA中的抽象方法的名字.这里这个方法的用途是得到由cglib构造的BeanB的动态子类.

lookup-mentod中bean是BeanB的类型.也就是cglib构造的BeanB的动态子类的父类型...目的当然是父类的句柄可以引用子类:用这个父类型引用构造出来的动态子类. -->


    <bean id="hpDao" class="com.spring.lookupMd.HpDaoImpl"  />
    <bean id="aop" class="com.spring.aop.AopDataType"/>

    <bean id="hpService" class="com.spring.lookupMd.HpServiceImpl">
        <lookup-method name="getHpDao" bean="hpDao"/>
    </bean>
    <aop:aspectj-autoproxy/>
</beans>